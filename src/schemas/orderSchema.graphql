type schema {
  query: Query
  mutation: Mutation
}

# Define the Order type
type Order {
  OrderId: ID!
  CustomerId: Int!
  OrderTime: String!
  Status: String!
}

# Define the OrderItem type
type OrderItem {
  OrderItemId: ID!
  Quantity: Int!
  Price: Float!
}

# Define the TableData type
type TableData {
  Id: ID!
  IsAvailable: String!
}

# Define the Query type
type Query {
  getOrderItems: [OrderItem]
  getOrderItem(id: ID!): OrderItem
  getOrders: [Order]
  getOrder(id: ID!): Order
  getTableDatas: [TableData]
  getTableData(id: ID!): TableData
}

# Define the Mutation type
type Mutation {
  createOrderItem(orderItem: OrderItemInput!): OrderItem
  updateOrderItem(id: ID!, orderItem: OrderItemInput!): OrderItem
  deleteOrderItem(id: ID!): SuccessMessage
  createOrder(order: OrderInput!): Order
  updateOrder(id: ID!, order: OrderInput!): Order
  deleteOrder(id: ID!): SuccessMessage
  createTableData(tableData: TableDataInput!): TableData
  updateTableData(id: ID!, tableData: TableDataInput!): TableData
  deleteTableData(id: ID!): SuccessMessage
}

input OrderItemInput {
  Quantity: Int!
  Price: Float!
}

input OrderInput {
  CustomerId: Int!
  OrderTime: String!
  Status: String!
}

input TableDataInput {
  IsAvailable: String!
}

type SuccessMessage {
  success: Boolean!
}
